---
import type { ImageMetadata } from 'astro';
import Arrow from '@/components/atoms/Arrow.astro';
import EventCard from '@/components/molecules/top/EventCard.astro';
import type { Props as EventCardProps } from '@/components/molecules/top/EventCard.astro';

interface Props {
  className: string;
  list: EventCardProps[];
  spOnly?: boolean;
}

const { className, list, spOnly = false } = Astro.props;

const baseClass = `eventSlider js-eventSlider-wrapper relative ${spOnly ? 'spOnly' : ''}`;
const combinedClass = className ? `${baseClass} ${className}` : baseClass;
---

<div class={combinedClass}>
  <div class='swiper js-eventSlider' aria-label='イベントのスライダー'>
    <swiper-container class='swiper-wrapper'>
      {
        list.map((item) => (
          <swiper-slide class='swiper-slide !h-auto' role='group' aria-roledescription='slide'>
            <EventCard {...item} />
          </swiper-slide>
        ))
      }
    </swiper-container>
  </div>
  <div class={`pointer-events-auto mx-auto flex w-fit items-center sp:mt-14${spOnly ? ' pc:hidden' : ''}`}>
    <button
      aria-label='previous slide'
      class='eventSlider__icon js-slider-prev flex h-full shrink-0 flex-grow cursor-pointer items-center py-10 pc:px-44 pc:py-40 sp:px-48'>
      <Arrow color='black' />
    </button>

    <button
      aria-label='next slide'
      class='eventSlider__icon js-slider-next items-centerpc:py-40 flex h-full shrink-0 flex-grow cursor-pointer justify-end py-10 pc:px-44 pc:py-40 sp:px-48'>
      <Arrow color='black' className='rotate-180' />
    </button>
  </div>
</div>
<script>
  import { _breakP } from '@/scripts/utils.ts';
  import Swiper from 'swiper';
  import 'swiper/css/bundle';

  const swiperElementsArray = document.querySelectorAll<HTMLElement>('.js-eventSlider-wrapper');
  swiperElementsArray.forEach((swiperElementWrapper, index) => {
    const swiperElement = swiperElementWrapper.querySelector<HTMLElement>('.js-eventSlider');
    if (swiperElement) {
      const uniqueId = `eventSlide-${index + 1}`;
      swiperElement.id = uniqueId;

      const prevButton = swiperElementWrapper?.querySelector<HTMLElement>('.js-slider-prev');
      const nextButton = swiperElementWrapper?.querySelector<HTMLElement>('.js-slider-next');
      let eventSwiper: any;

      function initSlider() {
        eventSwiper = new Swiper(swiperElement ? swiperElement : '', {
          effect: 'slide',
          loop: true,
          centeredSlides: true,
          autoplay: false,
          slidesPerView: _breakP.PC ? 2 : 1.23,
          simulateTouch: true,
          allowTouchMove: true,
          grabCursor: true,
          speed: 1800,
          pagination: false,
          watchSlidesProgress: true,
          observer: true,
          observeParents: true,
          resizeObserver: true,
        });

        prevButton?.addEventListener('click', () => eventSwiper.slidePrev());
        nextButton?.addEventListener('click', () => eventSwiper.slideNext());
      }

      document.addEventListener('DOMContentLoaded', () => {
        initSlider();
      });
    }
  });
</script>
<style is:global lang='scss'>
  .eventSlider {
    .swiper-slide {
      display: flex;
      justify-content: center;
      .eventCard {
        opacity: 0.8;
        transition: opacity 1s ease-in-out;
      }
      &.swiper-slide-active {
        .eventCard {
          opacity: 1;
        }
      }
    }
  }

  .js-pageTone-color-black .eventSlider__icon {
    border: 1px solid #4d4945;
    background: #403326;
  }
  .js-pageTone-color-white .eventSlider__icon,
  .js-pageTone-color-tan .eventSlider__icon {
    border: 1px solid #d9cec3;
    background: #fff;
  }

  .js-pageTone-color-black .eventSlider__current {
    color: #fff;
  }
  .js-pageTone-color-white .eventSlider__current,
  .js-pageTone-color-tan .eventSlider__current {
    color: #333;
  }
</style>
